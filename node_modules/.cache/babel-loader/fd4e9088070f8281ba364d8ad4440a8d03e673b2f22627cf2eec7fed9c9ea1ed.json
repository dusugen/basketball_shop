{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nexport let Status;\n(function (Status) {\n  Status[\"LOADING\"] = \"loading\";\n  Status[\"SUCCESS\"] = \"success\";\n  Status[\"ERROR\"] = \"error\";\n})(Status || (Status = {}));\nconst initialState = {\n  items: [],\n  status: Status.LOADING\n};\nexport const fetchPizzas = createAsyncThunk(\"pizza/fetchPizzas\", async params => {\n  const {\n    currentPage,\n    category,\n    sortBy,\n    order,\n    search\n  } = params;\n  const {\n    data\n  } = await axios.get(`https://63bbda34cf99234bfa660b9e.mockapi.io/items?page=${currentPage}&limit=4&${category}&sortBy=${sortBy}&order=${order}${search}`);\n  if (data.length === 0) {\n    throw new Error('rejected');\n  }\n  return data;\n});\nconst pizzaSlice = createSlice({\n  name: 'pizza',\n  initialState,\n  reducers: {\n    setItems(state, action) {\n      state.items = action.payload;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchPizzas.fulfilled, (state, action) => {\n      state.items = action.payload;\n      state.status = Status.SUCCESS;\n    });\n    builder.addCase(fetchPizzas.pending, (state, action) => {\n      state.status = Status.LOADING;\n      state.items = [];\n    });\n    builder.addCase(fetchPizzas.rejected, (state, action) => {\n      state.items = [];\n      state.status = Status.ERROR;\n    });\n  }\n});\nexport const {\n  setItems\n} = pizzaSlice.actions; // reducers = action так называется в объекте.\n\nexport default pizzaSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","axios","Status","initialState","items","status","LOADING","fetchPizzas","params","currentPage","category","sortBy","order","search","data","get","length","Error","pizzaSlice","name","reducers","setItems","state","action","payload","extraReducers","builder","addCase","fulfilled","SUCCESS","pending","rejected","ERROR","actions","reducer"],"sources":["/home/dusugen/react-pizza/src/redux/slices/pizzaSlice.ts"],"sourcesContent":["import {createAsyncThunk, createSlice, PayloadAction} from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\ntype Pizza = {\n    id: number,\n    name: string,\n    imageUrl: string;\n    price: number;\n    sizes: number[];\n    types: number[];\n}\n\nexport type SearchPizzaParams = {\n    currentPage: string;\n    category: string;\n    sortBy: string;\n    order: string;\n    search: string;\n}\n\nexport enum Status {\n    LOADING = \"loading\",\n    SUCCESS = \"success\",\n    ERROR = \"error\",\n}\n\ninterface PizzaSliceState {\n    status: Status;\n    items: Pizza[];\n}\n\nconst initialState: PizzaSliceState = {\n    items: [],\n    status: Status.LOADING,\n}\n\nexport const fetchPizzas = createAsyncThunk(\"pizza/fetchPizzas\", async (params: SearchPizzaParams) => {\n    const {currentPage, category, sortBy, order, search} = params;\n    const {data} = await axios.get(`https://63bbda34cf99234bfa660b9e.mockapi.io/items?page=${currentPage}&limit=4&${category}&sortBy=${sortBy}&order=${order}${search}`);\n\n    if (data.length === 0) {\n        throw new Error('rejected')\n    }\n    return data as Pizza[];\n})\n\n\nconst pizzaSlice = createSlice({\n    name: 'pizza',\n    initialState,\n    reducers: {\n        setItems(state, action: PayloadAction<Pizza[]>) {\n            state.items = action.payload;\n        }\n    },\n    extraReducers: builder => {\n        builder.addCase(fetchPizzas.fulfilled, (state, action) => {\n            state.items = action.payload;\n            state.status = Status.SUCCESS;\n        })\n        builder.addCase(fetchPizzas.pending, (state, action) => {\n            state.status = Status.LOADING;\n            state.items = [];\n        })\n        builder.addCase(fetchPizzas.rejected, (state, action) => {\n            state.items = []\n            state.status = Status.ERROR;\n        })\n\n    }\n})\n\nexport const {setItems} = pizzaSlice.actions   // reducers = action так называется в объекте.\n\nexport default pizzaSlice.reducer"],"mappings":"AAAA,SAAQA,gBAAgB,EAAEC,WAAW,QAAsB,kBAAkB;AAC7E,OAAOC,KAAK,MAAM,OAAO;AAmBzB,WAAYC,MAAM;AAIjB,WAJWA,MAAM;EAANA,MAAM;EAANA,MAAM;EAANA,MAAM;AAAA,GAANA,MAAM,KAANA,MAAM;AAWlB,MAAMC,YAA6B,GAAG;EAClCC,KAAK,EAAE,EAAE;EACTC,MAAM,EAAEH,MAAM,CAACI;AACnB,CAAC;AAED,OAAO,MAAMC,WAAW,GAAGR,gBAAgB,CAAC,mBAAmB,EAAE,MAAOS,MAAyB,IAAK;EAClG,MAAM;IAACC,WAAW;IAAEC,QAAQ;IAAEC,MAAM;IAAEC,KAAK;IAAEC;EAAM,CAAC,GAAGL,MAAM;EAC7D,MAAM;IAACM;EAAI,CAAC,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAE,0DAAyDN,WAAY,YAAWC,QAAS,WAAUC,MAAO,UAASC,KAAM,GAAEC,MAAO,EAAC,CAAC;EAEpK,IAAIC,IAAI,CAACE,MAAM,KAAK,CAAC,EAAE;IACnB,MAAM,IAAIC,KAAK,CAAC,UAAU,CAAC;EAC/B;EACA,OAAOH,IAAI;AACf,CAAC,CAAC;AAGF,MAAMI,UAAU,GAAGlB,WAAW,CAAC;EAC3BmB,IAAI,EAAE,OAAO;EACbhB,YAAY;EACZiB,QAAQ,EAAE;IACNC,QAAQ,CAACC,KAAK,EAAEC,MAA8B,EAAE;MAC5CD,KAAK,CAAClB,KAAK,GAAGmB,MAAM,CAACC,OAAO;IAChC;EACJ,CAAC;EACDC,aAAa,EAAEC,OAAO,IAAI;IACtBA,OAAO,CAACC,OAAO,CAACpB,WAAW,CAACqB,SAAS,EAAE,CAACN,KAAK,EAAEC,MAAM,KAAK;MACtDD,KAAK,CAAClB,KAAK,GAAGmB,MAAM,CAACC,OAAO;MAC5BF,KAAK,CAACjB,MAAM,GAAGH,MAAM,CAAC2B,OAAO;IACjC,CAAC,CAAC;IACFH,OAAO,CAACC,OAAO,CAACpB,WAAW,CAACuB,OAAO,EAAE,CAACR,KAAK,EAAEC,MAAM,KAAK;MACpDD,KAAK,CAACjB,MAAM,GAAGH,MAAM,CAACI,OAAO;MAC7BgB,KAAK,CAAClB,KAAK,GAAG,EAAE;IACpB,CAAC,CAAC;IACFsB,OAAO,CAACC,OAAO,CAACpB,WAAW,CAACwB,QAAQ,EAAE,CAACT,KAAK,EAAEC,MAAM,KAAK;MACrDD,KAAK,CAAClB,KAAK,GAAG,EAAE;MAChBkB,KAAK,CAACjB,MAAM,GAAGH,MAAM,CAAC8B,KAAK;IAC/B,CAAC,CAAC;EAEN;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAACX;AAAQ,CAAC,GAAGH,UAAU,CAACe,OAAO,EAAG;;AAE/C,eAAef,UAAU,CAACgB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}