{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { getCartFromLS } from \"../../utils/getCartFromLS\";\nimport { calcTotalPrice } from \"../../utils/calcTotalPrice\";\nconst {\n  items,\n  totalPrice\n} = getCartFromLS();\nconst initialState = {\n  totalPrice,\n  items\n};\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    addItem(state, action) {\n      const findItem = state.items.find(obj => {\n        return obj.id === action.payload.id && obj.size === action.payload.size && obj.type === action.payload.type;\n      });\n      findItem ? findItem.count++ : state.items.push({\n        ...action.payload,\n        count: 1\n      });\n      state.totalPrice = calcTotalPrice(state.items);\n    },\n    minusItem(state, action) {\n      const findItem = state.items.find(obj => obj.id === action.payload.id && obj.size === action.payload.size && obj.type === action.payload.type);\n      if (findItem && findItem.count > 0) {\n        findItem.count--;\n      }\n      if ((findItem === null || findItem === void 0 ? void 0 : findItem.count) === 0) {\n        state.items = state.items.filter(obj => {\n          return !(obj.type === action.payload.type && obj.size === action.payload.size && obj.id === action.payload.id);\n        });\n      }\n      state.totalPrice = calcTotalPrice(state.items);\n    },\n    plusItem(state, action) {\n      const findItem = state.items.find(obj => obj.id === action.payload.id && obj.size === action.payload.size && obj.type === action.payload.type);\n      if (findItem) {\n        findItem.count++;\n      }\n      state.totalPrice = calcTotalPrice(state.items);\n    },\n    removeItem(state, action) {\n      state.items = state.items.filter(obj => {\n        return !(obj.type === action.payload.type && obj.size === action.payload.size && obj.id === action.payload.id);\n      });\n      state.totalPrice = calcTotalPrice(state.items);\n    },\n    clearItems(state) {\n      state.items = [];\n      state.totalPrice = calcTotalPrice(state.items);\n    }\n  }\n});\nexport const selectCart = state => state.cart;\nexport const {\n  addItem,\n  removeItem,\n  clearItems,\n  minusItem,\n  plusItem\n} = cartSlice.actions; // reducers = action так называется в объекте.\n\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","getCartFromLS","calcTotalPrice","items","totalPrice","initialState","cartSlice","name","reducers","addItem","state","action","findItem","find","obj","id","payload","size","type","count","push","minusItem","filter","plusItem","removeItem","clearItems","selectCart","cart","actions","reducer"],"sources":["/home/dusugen/react-basketball/src/redux/slices/cartSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { RootState } from \"../store\";\nimport { getCartFromLS } from \"../../utils/getCartFromLS\";\nimport { calcTotalPrice } from \"../../utils/calcTotalPrice\";\n\nexport type CartItem = {\n  id: number;\n  name: string;\n  price: number;\n  imageUrl: string;\n  type: string;\n  size: number;\n  count: number;\n};\n\ntype CartActions = {\n  id: number;\n  size: number;\n  type: string;\n};\n\ninterface CartSliceState {\n  totalPrice: number;\n  items: CartItem[];\n}\n\nconst { items, totalPrice } = getCartFromLS();\n\nconst initialState: CartSliceState = {\n  totalPrice,\n  items,\n};\n\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    addItem(state, action: PayloadAction<CartItem>) {\n      const findItem = state.items.find((obj) => {\n        return (\n          obj.id === action.payload.id &&\n          obj.size === action.payload.size &&\n          obj.type === action.payload.type\n        );\n      });\n      findItem\n        ? findItem.count++\n        : state.items.push({ ...action.payload, count: 1 });\n\n      state.totalPrice = calcTotalPrice(state.items);\n    },\n    minusItem(state, action: PayloadAction<CartActions>) {\n      const findItem = state.items.find(\n        (obj) =>\n          obj.id === action.payload.id &&\n          obj.size === action.payload.size &&\n          obj.type === action.payload.type\n      );\n\n      if (findItem && findItem.count > 0) {\n        findItem.count--;\n      }\n\n      if (findItem?.count === 0) {\n        state.items = state.items.filter((obj) => {\n          return !(\n            obj.type === action.payload.type &&\n            obj.size === action.payload.size &&\n            obj.id === action.payload.id\n          );\n        });\n      }\n\n      state.totalPrice = calcTotalPrice(state.items);\n    },\n    plusItem(state, action: PayloadAction<CartActions>) {\n      const findItem = state.items.find(\n        (obj) =>\n          obj.id === action.payload.id &&\n          obj.size === action.payload.size &&\n          obj.type === action.payload.type\n      );\n      if (findItem) {\n        findItem.count++;\n      }\n      state.totalPrice = calcTotalPrice(state.items);\n    },\n    removeItem(state, action: PayloadAction<CartActions>) {\n      state.items = state.items.filter((obj) => {\n        return !(\n          obj.type === action.payload.type &&\n          obj.size === action.payload.size &&\n          obj.id === action.payload.id\n        );\n      });\n      state.totalPrice = calcTotalPrice(state.items);\n    },\n    clearItems(state) {\n      state.items = [];\n      state.totalPrice = calcTotalPrice(state.items);\n    },\n  },\n});\n\nexport const selectCart = (state: RootState) => state.cart;\n\nexport const { addItem, removeItem, clearItems, minusItem, plusItem } =\n  cartSlice.actions; // reducers = action так называется в объекте.\n\nexport default cartSlice.reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}