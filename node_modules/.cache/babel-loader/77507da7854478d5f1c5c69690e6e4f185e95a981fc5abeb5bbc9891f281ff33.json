{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  totalPrice: 0,\n  items: []\n};\nconst getSum = items => {\n  const totalPrice = items.reduce((sum, obj) => {\n    return sum + obj.price * obj.count;\n  }, 0);\n  return totalPrice;\n};\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    addItem(state, action) {\n      const findItem = state.items.find(obj => {\n        return obj.id === action.payload.id && obj.size === action.payload.size && obj.type === action.payload.type;\n      });\n      findItem ? findItem.count++ : state.items.push({\n        ...action.payload,\n        count: 1\n      });\n      state.totalPrice = getSum(state.items);\n    },\n    minusItem(state, action) {\n      const findItem = state.items.find(obj => obj.id === action.payload.id && obj.size === action.payload.size && obj.type === action.payload.type);\n      if (findItem && findItem.count > 0) {\n        findItem.count--;\n      }\n      if (findItem.count === 0) {\n        state.items = state.items.filter(obj => {\n          return !(obj.type === action.payload.type && obj.size === action.payload.size && obj.id === action.payload.id);\n        });\n      }\n      state.totalPrice = getSum(state.items);\n    },\n    plusItem(state, action) {\n      const findItem = state.items.find(obj => obj.id === action.payload.id && obj.size === action.payload.size && obj.type === action.payload.type);\n      if (findItem) {\n        findItem.count++;\n      }\n      state.totalPrice = getSum(state.items);\n    },\n    removeItem(state, action) {\n      state.items = state.items.filter(obj => {\n        return !(obj.type === action.payload.type && obj.size === action.payload.size && obj.id === action.payload.id);\n      });\n      state.totalPrice = getSum(state.items);\n    },\n    clearItems(state) {\n      state.items = [];\n      state.totalPrice = getSum(state.items);\n    }\n  }\n});\nexport const selectCart = state => state.cart;\nexport const {\n  addItem,\n  removeItem,\n  clearItems,\n  minusItem,\n  plusItem\n} = cartSlice.actions; // reducers = action так называется в объекте.\n\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","totalPrice","items","getSum","reduce","sum","obj","price","count","cartSlice","name","reducers","addItem","state","action","findItem","find","id","payload","size","type","push","minusItem","filter","plusItem","removeItem","clearItems","selectCart","cart","actions","reducer"],"sources":["/home/dusugen/react-pizza/src/redux/slices/cartSlice.ts"],"sourcesContent":["import {createSlice} from \"@reduxjs/toolkit\";\n\ntype CartItem = {\n    id: number;\n    name: string;\n    price: number;\n    imageUrl: string;\n    type: number;\n    size: number;\n    count: number;\n}\n\ninterface CartSliceState {\n    totalPrice: number;\n    items: CartItem[]\n}\n\nconst initialState: CartSliceState = {\n    totalPrice: 0,\n    items: [],\n}\n\nconst getSum = (items:any) => {\n    const totalPrice = items.reduce((sum:number, obj:any) => {\n        return sum + (obj.price * obj.count)\n    }, 0)\n    return totalPrice;\n}\n\nconst cartSlice = createSlice({\n    name: 'cart',\n    initialState,\n    reducers: {\n        addItem(state, action) {\n            const findItem = state.items.find((obj) => {\n                return (obj.id === action.payload.id && obj.size === action.payload.size && obj.type === action.payload.type)\n            });\n            (findItem) ? findItem.count++ : state.items.push({...action.payload, count: 1});\n\n            state.totalPrice = getSum(state.items)\n        },\n        minusItem(state, action) {\n            const findItem = state.items.find(obj =>\n                (obj.id === action.payload.id && obj.size === action.payload.size && obj.type === action.payload.type));\n\n            if (findItem && findItem.count > 0) {\n                findItem.count--;\n            }\n\n            if (findItem.count === 0) {\n                state.items = state.items.filter((obj) => {\n                    return !(obj.type === action.payload.type && obj.size === action.payload.size && obj.id === action.payload.id)\n                })\n            }\n\n            state.totalPrice = getSum(state.items);\n        },\n        plusItem(state, action) {\n            const findItem = state.items.find(obj => ((obj.id === action.payload.id && obj.size === action.payload.size && obj.type === action.payload.type)));\n            if (findItem) {\n                findItem.count++;\n            }\n            state.totalPrice = getSum(state.items);\n        }\n        ,\n        removeItem(state, action) {\n            state.items = state.items.filter(obj => {\n                return !(obj.type === action.payload.type && obj.size === action.payload.size && obj.id === action.payload.id);\n            });\n            state.totalPrice = getSum(state.items);\n        }\n        ,\n        clearItems(state) {\n            state.items = [];\n            state.totalPrice = getSum(state.items)\n        }\n    }\n})\n\nexport const selectCart = (state) => state.cart;\n\nexport const {addItem, removeItem, clearItems, minusItem, plusItem} = cartSlice.actions   // reducers = action так называется в объекте.\n\nexport default cartSlice.reducer"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}