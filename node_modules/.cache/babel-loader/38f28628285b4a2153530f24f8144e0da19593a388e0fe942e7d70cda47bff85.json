{"ast":null,"code":"var _jsxFileName = \"/home/dusugen/react-pizza/src/pages/Home.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport qs from \"qs\";\nimport { useNavigate } from \"react-router-dom\";\nimport '../scss/app.scss';\nimport Categories from \"../components/Categories\";\nimport Sort, { sortList } from \"../components/Sort\";\nimport Skeleton from \"../components/PizzaBlock/Skeleton\";\nimport PizzaBlock from \"../components/PizzaBlock/PizzaBlock\";\nimport Pagination from \"../components/Pagination/Pagination\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setCategoryId, setCurrentPage, setFilters } from \"../redux/slices/filterSlice\";\nimport { fetchPizzas } from \"../redux/slices/pizzaSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  const navigate = useNavigate();\n  const {\n    categoryId,\n    sort,\n    currentPage,\n    searchValue\n  } = useSelector(\n  //@ts-ignore\n  state => state.filter);\n  const {\n    items,\n    status\n  } = useSelector(\n  //@ts-ignore\n  state => state.pizza);\n  const dispatch = useDispatch();\n  const onChangeCategory = id => dispatch(setCategoryId(id));\n  const onChangePageCount = num => dispatch(setCurrentPage(num));\n  const isSearch = useRef(false);\n  const isMounted = useRef(false);\n\n  // Запрос через асинхронный диспатч на сервер\n  const fetchPizza = async () => {\n    const category = categoryId > 0 ? `category=${categoryId}` : ''; // сортировка по категориям\n    const sortBy = sort.sortProperty.replace('-', ''); // убираем \"-\" из параметров\n    const order = sort.sortProperty.includes('-') ? 'asc' : 'desc'; // указываем тип фильтрации\n    const search = searchValue ? `&name=${searchValue}` : ''; // поиск по пиццам\n\n    await dispatch(\n    //@ts-ignore\n    fetchPizzas({\n      currentPage,\n      category,\n      sortBy,\n      order,\n      search\n    }));\n  };\n  // Убираем отображение в URL параметров при первом рендере страницы\n  useEffect(() => {\n    if (isMounted.current) {\n      const queryString = qs.stringify({\n        sortProperty: sort.sortProperty,\n        categoryId,\n        currentPage\n      });\n      navigate(`?${queryString}`);\n    }\n    isMounted.current = true;\n  }, [categoryId, sort.sortProperty, searchValue, currentPage]);\n\n  // Если был первый рендер, проверяем URL-параметры и сохраняем в redux\n  useEffect(() => {\n    if (window.location.search) {\n      const params = qs.parse(window.location.search.substring(1));\n      const sort = sortList.find(item => item.sortProperty === params.sortProperty);\n      dispatch(setFilters({\n        ...params,\n        sort\n      }));\n      isSearch.current = true;\n    }\n  }, []);\n\n  // Проверяем, если ли в адресной строке данные.\n  useEffect(() => {\n    fetchPizza();\n    isSearch.current = false;\n  }, [categoryId, sort.sortProperty, searchValue, currentPage]);\n\n  // Генерация  компонентов пицц\n  const pizzas = items.map(obj => /*#__PURE__*/_jsxDEV(PizzaBlock, {\n    ...obj\n  }, obj.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 29\n  }, this));\n  const skeletons = [...new Array(4)].map((_, index) => /*#__PURE__*/_jsxDEV(Skeleton, {}, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 59\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content__top\",\n      children: [/*#__PURE__*/_jsxDEV(Categories, {\n        value: categoryId,\n        onClickCategory: i => onChangeCategory(i)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Sort, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this), status === 'error' ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content__error-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\uD83D\\uDE15\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"\\u041A \\u0441\\u043E\\u0436\\u0430\\u043B\\u0435\\u043D\\u0438\\u044E, \\u043D\\u0435 \\u0443\\u0434\\u0430\\u043B\\u043E\\u0441\\u044C \\u043E\\u0442\\u043E\\u0431\\u0440\\u0430\\u0437\\u0438\\u0442\\u044C \\u043F\\u0438\\u0446\\u0446\\u044B.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 66\n        }, this), \" \\u041F\\u043E\\u0432\\u0442\\u043E\\u0440\\u0438\\u0442\\u0435 \\u043F\\u043E\\u043F\\u044B\\u0442\\u043A\\u0443 \\u043F\\u043E\\u0437\\u0436\\u0435. \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"content__title\",\n        children: \"\\u0412\\u0441\\u0435 \\u043F\\u0438\\u0446\\u0446\\u044B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content__items\",\n        children: status === 'loading' ? skeletons : pizzas\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(Pagination, {\n      currentPage: currentPage,\n      onChangePage: num => {\n        onChangePageCount(num);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 13\n  }, this);\n}\n_s(Home, \"nQ6HSNFBzQ9wc47mFc0QMBvUifU=\", false, function () {\n  return [useNavigate, useSelector, useSelector, useDispatch];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useRef","qs","useNavigate","Categories","Sort","sortList","Skeleton","PizzaBlock","Pagination","useDispatch","useSelector","setCategoryId","setCurrentPage","setFilters","fetchPizzas","Home","navigate","categoryId","sort","currentPage","searchValue","state","filter","items","status","pizza","dispatch","onChangeCategory","id","onChangePageCount","num","isSearch","isMounted","fetchPizza","category","sortBy","sortProperty","replace","order","includes","search","current","queryString","stringify","window","location","params","parse","substring","find","item","pizzas","map","obj","skeletons","Array","_","index","i"],"sources":["/home/dusugen/react-pizza/src/pages/Home.tsx"],"sourcesContent":["import React, {useEffect, useRef} from 'react';\nimport qs from \"qs\"\nimport {useNavigate} from \"react-router-dom\";\n\nimport '../scss/app.scss'\nimport Categories from \"../components/Categories\";\nimport Sort, {sortList} from \"../components/Sort\";\nimport Skeleton from \"../components/PizzaBlock/Skeleton\";\nimport PizzaBlock from \"../components/PizzaBlock/PizzaBlock\";\nimport Pagination from \"../components/Pagination/Pagination\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {setCategoryId, setCurrentPage, setFilters} from \"../redux/slices/filterSlice\";\nimport {fetchPizzas} from \"../redux/slices/pizzaSlice\";\n\n\nfunction Home() {\n\n    const navigate = useNavigate();\n    const {categoryId, sort, currentPage, searchValue} = useSelector(\n        //@ts-ignore\n        state => state.filter);\n    const {items, status} = useSelector(//@ts-ignore\n        state => state.pizza);\n\n    const dispatch = useDispatch();\n\n    const onChangeCategory = (id: number) => dispatch(setCategoryId(id));\n    const onChangePageCount = (num: number) => dispatch(setCurrentPage(num))\n\n    const isSearch = useRef(false);\n    const isMounted = useRef(false);\n\n    // Запрос через асинхронный диспатч на сервер\n    const fetchPizza = async () => {\n        const category = (categoryId > 0) ? `category=${categoryId}` : ''; // сортировка по категориям\n        const sortBy = sort.sortProperty.replace('-', ''); // убираем \"-\" из параметров\n        const order = sort.sortProperty.includes('-') ? 'asc' : 'desc';  // указываем тип фильтрации\n        const search = (searchValue) ? `&name=${searchValue}` : ''; // поиск по пиццам\n\n        await dispatch(\n            //@ts-ignore\n            fetchPizzas({currentPage, category, sortBy, order, search}))\n    }\n    // Убираем отображение в URL параметров при первом рендере страницы\n    useEffect(() => {\n        if (isMounted.current) {\n            const queryString = qs.stringify({\n                sortProperty: sort.sortProperty, categoryId, currentPage,\n            })\n            navigate(`?${queryString}`)\n        }\n        isMounted.current = true;\n    }, [categoryId, sort.sortProperty, searchValue, currentPage])\n\n    // Если был первый рендер, проверяем URL-параметры и сохраняем в redux\n    useEffect(() => {\n        if (window.location.search) {\n            const params = qs.parse(window.location.search.substring(1))\n            const sort = sortList.find(item => item.sortProperty === params.sortProperty)\n            dispatch(setFilters({...params, sort}));\n            isSearch.current = true;\n        }\n    }, [])\n\n    // Проверяем, если ли в адресной строке данные.\n    useEffect(() => {\n        fetchPizza();\n        isSearch.current = false\n    }, [categoryId, sort.sortProperty, searchValue, currentPage])\n\n    // Генерация  компонентов пицц\n    const pizzas = items\n        .map((obj: any) => (<PizzaBlock key={obj.id} {...obj}/>))\n\n    const skeletons = [...new Array(4)].map((_, index) => <Skeleton key={index}/>);\n\n    return (<div className=\"container\">\n        <div className=\"content__top\">\n            <Categories value={categoryId} onClickCategory={(i: number) => onChangeCategory(i)}/>\n            <Sort/>\n        </div>\n        {status === 'error' ? (\n                <div className=\"content__error-info\">\n                    <div>\n                        <span>😕</span>\n                    </div>\n                    <h2>К сожалению, не удалось отобразить пиццы.<br/> Повторите попытку позже. </h2>\n                </div>\n            )\n            : (<>\n                <h2 className=\"content__title\">Все пиццы</h2>\n                <div className=\"content__items\">\n                    {status === 'loading' ? skeletons : pizzas}\n                </div>\n            </>)}\n        <Pagination\n            currentPage={currentPage}\n            onChangePage={(num: number) => {\n                onChangePageCount(num)\n            }}/>\n    </div>);\n}\n\nexport default Home;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}