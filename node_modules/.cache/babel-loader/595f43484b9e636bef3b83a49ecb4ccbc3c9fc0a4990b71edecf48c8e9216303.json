{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { getCartFromLS } from \"../../utils/getCartFromLS\";\nimport { calcTotalPrice } from \"../../utils/calcTotalPrice\";\nconst {\n  items,\n  totalPrice\n} = getCartFromLS();\nconst initialState = {\n  totalPrice: totalPrice,\n  items: items\n};\n//\n// const getSum = (items: CartItem[]) => {\n//     const totalPrice = items.reduce((sum: number, obj: CartItem) => {\n//         return sum + (obj.price * obj.count)\n//     }, 0)\n//     return totalPrice;\n// }\n\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    addItem(state, action) {\n      const findItem = state.items.find(obj => {\n        return obj.id === action.payload.id && obj.size === action.payload.size && obj.type === action.payload.type;\n      });\n      findItem ? findItem.count++ : state.items.push({\n        ...action.payload,\n        count: 1\n      });\n      state.totalPrice = calcTotalPrice(state.items);\n    },\n    minusItem(state, action) {\n      const findItem = state.items.find(obj => obj.id === action.payload.id && obj.size === action.payload.size && obj.type === action.payload.type);\n      if (findItem && findItem.count > 0) {\n        findItem.count--;\n      }\n      if ((findItem === null || findItem === void 0 ? void 0 : findItem.count) === 0) {\n        state.items = state.items.filter(obj => {\n          return !(obj.type === action.payload.type && obj.size === action.payload.size && obj.id === action.payload.id);\n        });\n      }\n      state.totalPrice = calcTotalPrice(state.items);\n    },\n    plusItem(state, action) {\n      const findItem = state.items.find(obj => obj.id === action.payload.id && obj.size === action.payload.size && obj.type === action.payload.type);\n      if (findItem) {\n        findItem.count++;\n      }\n      state.totalPrice = calcTotalPrice(state.items);\n    },\n    removeItem(state, action) {\n      state.items = state.items.filter(obj => {\n        return !(obj.type === action.payload.type && obj.size === action.payload.size && obj.id === action.payload.id);\n      });\n      state.totalPrice = calcTotalPrice(state.items);\n    },\n    clearItems(state) {\n      state.items = [];\n      state.totalPrice = calcTotalPrice(state.items);\n    }\n  }\n});\nexport const selectCart = state => state.cart;\nexport const {\n  addItem,\n  removeItem,\n  clearItems,\n  minusItem,\n  plusItem\n} = cartSlice.actions; // reducers = action так называется в объекте.\n\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","getCartFromLS","calcTotalPrice","items","totalPrice","initialState","cartSlice","name","reducers","addItem","state","action","findItem","find","obj","id","payload","size","type","count","push","minusItem","filter","plusItem","removeItem","clearItems","selectCart","cart","actions","reducer"],"sources":["/home/dusugen/react-pizza/src/redux/slices/cartSlice.ts"],"sourcesContent":["import {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\nimport {RootState} from \"../store\";\nimport {getCartFromLS} from \"../../utils/getCartFromLS\";\nimport {calcTotalPrice} from \"../../utils/calcTotalPrice\";\n\nexport type CartItem = {\n    id: number;\n    name: string;\n    price: number;\n    imageUrl: string;\n    type: string;\n    size: number;\n    count: number;\n}\n\ntype CartActions = {\n    id: number;\n    size: number;\n    type: string;\n}\n\ninterface CartSliceState {\n    totalPrice: number;\n    items: CartItem[]\n}\n\nconst {items,totalPrice} = getCartFromLS();\n\nconst initialState: CartSliceState = {\n    totalPrice: totalPrice,\n    items: items,\n}\n//\n// const getSum = (items: CartItem[]) => {\n//     const totalPrice = items.reduce((sum: number, obj: CartItem) => {\n//         return sum + (obj.price * obj.count)\n//     }, 0)\n//     return totalPrice;\n// }\n\nconst cartSlice = createSlice({\n    name: 'cart',\n    initialState,\n    reducers: {\n        addItem(state, action: PayloadAction<CartItem>) {\n            const findItem = state.items.find((obj) => {\n                return (obj.id === action.payload.id && obj.size === action.payload.size && obj.type === action.payload.type)\n            });\n            (findItem) ? findItem.count++ : state.items.push({...action.payload, count: 1});\n\n            state.totalPrice = calcTotalPrice(state.items)\n        },\n        minusItem(state, action: PayloadAction<CartActions>) {\n            const findItem = state.items.find(obj =>\n                (obj.id === action.payload.id && obj.size === action.payload.size && obj.type === action.payload.type));\n\n            if (findItem && findItem.count > 0) {\n                findItem.count--;\n            }\n\n            if (findItem?.count === 0) {\n                state.items = state.items.filter((obj) => {\n                    return !(obj.type === action.payload.type && obj.size === action.payload.size && obj.id === action.payload.id)\n                })\n            }\n\n            state.totalPrice = calcTotalPrice(state.items);\n        },\n        plusItem(state, action: PayloadAction<CartActions>) {\n            const findItem = state.items.find(obj => ((obj.id === action.payload.id && obj.size === action.payload.size && obj.type === action.payload.type)));\n            if (findItem) {\n                findItem.count++;\n            }\n            state.totalPrice = calcTotalPrice(state.items);\n        }\n        ,\n        removeItem(state, action: PayloadAction<CartActions>) {\n            state.items = state.items.filter(obj => {\n                return !(obj.type === action.payload.type && obj.size === action.payload.size && obj.id === action.payload.id);\n            });\n            state.totalPrice = calcTotalPrice(state.items);\n        }\n        ,\n        clearItems(state) {\n            state.items = [];\n            state.totalPrice = calcTotalPrice(state.items)\n        }\n    }\n})\n\nexport const selectCart = (state: RootState) => state.cart;\n\nexport const {addItem, removeItem, clearItems, minusItem, plusItem} = cartSlice.actions   // reducers = action так называется в объекте.\n\nexport default cartSlice.reducer"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}